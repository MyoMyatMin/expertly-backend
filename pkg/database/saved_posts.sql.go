// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: saved_posts.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createSavedPost = `-- name: CreateSavedPost :one
INSERT INTO saved_posts(user_id, post_id) VALUES ($1, $2) RETURNING user_id, post_id, created_at
`

type CreateSavedPostParams struct {
	UserID uuid.UUID
	PostID uuid.UUID
}

func (q *Queries) CreateSavedPost(ctx context.Context, arg CreateSavedPostParams) (SavedPost, error) {
	row := q.db.QueryRowContext(ctx, createSavedPost, arg.UserID, arg.PostID)
	var i SavedPost
	err := row.Scan(&i.UserID, &i.PostID, &i.CreatedAt)
	return i, err
}

const deleteSavedPost = `-- name: DeleteSavedPost :exec
DELETE FROM saved_posts WHERE user_id = $1 AND post_id = $2
`

type DeleteSavedPostParams struct {
	UserID uuid.UUID
	PostID uuid.UUID
}

func (q *Queries) DeleteSavedPost(ctx context.Context, arg DeleteSavedPostParams) error {
	_, err := q.db.ExecContext(ctx, deleteSavedPost, arg.UserID, arg.PostID)
	return err
}
